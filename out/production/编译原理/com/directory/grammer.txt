#默认第一个字符串为产生式左边 剩下的产生式右边从第二个开始并以空格分隔
1. program   declaration-list
2. declaration-list   declaration-list declaration | declaration
3. declaration   variable-declaration | function-declaration
4. variable-declaration   type-specifier ID ; | type-specifier ID [ NUM ] ;
5. type-specifier   int | void | struct-specifier
6. struct-specifier   struct optional-identifier { struct-declaration-list }
7. optional-identifier   ID | ε
8. struct-declaration-list   struct-declaration-list int ID ; | int ID ;
9. function-declaration   type-specifier ID ( parameters ) compound-statement
10. parameters   parameter-list | void
11. parameter-list   parameter-list , parameter | parameter
12. parameter   type-specifier ID | type-specifier ID [ ]
13. compound-statement   { local-declarations statement-list }
14. local-declarations   local-declarations variable-declaration | ε
15. statement-list   statement-list statement | ε
16. statement   compound-statement | expression-statement | selection-statement | labeled-statement | iteration-statement | jump-statement
17. expression-statement   optional-expression ;
18. optional-expression   expression | ε
19. selection-statement   if ( expression ) statement | if ( expression ) statement else statement | switch ( expression ) statement
20. iteration-statement   while ( expression ) statement | for ( optional-expression ; optional-expression ; optional-expression ) statement
21. jump-statement   return optional-expression ; | break ; | goto ID ;
22. labeled-statement   ID : statement | case conditional-expression : statement | default : statement
23. expression   assignment-expression | conditional-expression
24. assignment-expression   variable = expression
25. variable   ID | ID [ NUM ] | ID . ID
26. conditional-expression   additive-expression | additive-expression relation-operator additive-expression
27. relation-operator   <= | < | > | >= | ! = | ==
28. additive-expression   multiplicative-expression | additive-expression add-operator multiplicative-expression
29. add-operator   + | -
30. multiplicative-expression   primary-expression | multiplicative-expression mul-operator primary-expression
31. mul-operator   * | /
32. primary-expression   variable | NUM | ( expression ) | call-function
33. call-function   ID ( arguments )
34. arguments   argument-list | ε
35. argument-list   argument-list , expression | expression